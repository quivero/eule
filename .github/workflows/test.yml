
name: Codecov workflow 
on: [push, pull_request]
jobs:
  codecov:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [2.7, 3.6, 3.8]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python }}
    - name: Generate coverage report
      run: |
        if ["${{ matrix.os }}" = "windows-latest"]; then
          c:\hostedtoolcache\windows\python\3.7.9\x64\python.exe -m pip install -r requirements_dev.txt  
          c:\hostedtoolcache\windows\python\3.7.9\x64\python.exe -m pytest --cov=./ --cov-report=xml  
        else
          pip install -r requirements_dev.txt  
          pytest --cov=./ --cov-report=xml  
        fi       
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
  safety:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.7'
    steps:
      - uses: pyupio/safety@2.2.1
        with:
          api-key: ${{secrets.SAFETY_API_KEY}}
